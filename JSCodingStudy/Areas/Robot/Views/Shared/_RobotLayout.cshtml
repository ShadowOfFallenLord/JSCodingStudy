@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link rel="stylesheet" href="~/Content/RobotStyles/Styles.css" type="text/css" />

<div class="row align-items-start borders" id="page_top_row">
    <div class="col-lg-5 borders">
        <div id="robot_display" class="display_table" align="center">
            display
        </div>
    </div>
    <div class="col-lg-7 full_height borders">
        <div class="row borders">
            <div class="col-lg-4 borders">
                Действия:
            </div>
            <div class="col-lg-8 borders">
                Задание:
            </div>
        </div>
        <div class="row full_height borders">
            <div class="col-lg-4 full_height borders">
                <textarea id="log_display" readonly="true" class="form-control"></textarea>
            </div>
            <div class="col-lg-8 full_height borders">
                @RenderSection("task", required: true)
            </div>
        </div>
    </div>
</div>
<div class="row align-items-center borders" id="page_bottom_row">
    <div class="col-lg-5 full_height borders">
        <div class="borders">
            Код:
        </div>
        <div class="borders full_height">
            <textarea id="code_input" class="form-control text-left" rows="2"></textarea>
        </div>
    </div>
    <div class="col-lg-7 full_height text-center button_container borders">
        <input type="button" id="run_button" value="Запуск" class="btn btn-primary">
        <input type="button" id="clear_button" value="Сброс" class="btn btn-primary">
        <input type="button" id="help_button" value="Помощь" class="btn btn-primary">
        @Html.ActionLink("Назад", "Index", "Menu", null, new { @class = "btn btn-primary" })
    </div>
</div>

<div id="help_container" class="help_container borders_inside" style="display: none;">
    <input type="button" id="close_help_button" value="X">
    <ul id="help_text" style="padding: 5px;">
        Справка по командам
    </ul>
</div>

<!-- Открытие/закрытие окошка помощи -->
<script type="module">
    var HelpContainer = document.getElementById('help_container');

    document.getElementById('close_help_button').onclick = function() {
        HelpContainer.style.display = "none";
    };

    document.getElementById('help_button').onclick = function() {
        HelpContainer.style.display = "block";

        var screen_width = document.documentElement.clientWidth;
        var screen_heigth = document.documentElement.clientHeight;

        var element_width = HelpContainer.offsetWidth;
        var element_heigth = HelpContainer.offsetHeight;

        HelpContainer.style.left = ((screen_width / 2) - (element_width / 2)) + "px";
        HelpContainer.style.top = ((screen_heigth / 2) - (element_heigth / 2)) + "px";
    };

    import * as RAPI from "@Url.Content("~/Scripts/RobotAPI/GeneralRobotAPI.js")";
    var help = RAPI.GetHelpAPI();
    var help_test = document.getElementById('help_text');

    @if (IsSectionDefined("help"))
    {
        @RenderSection("help")
    }
    else
    {
        @:var help_node = help.ParseHelp(help.GetHelp(true, true, true));
    }
    help_test.append(help_node);
</script>

<script>
    /**
     * Базовые элеметы.
     * @@typedef {Object} HtmlButtonsElements
     *
     * @@property {HTMLElement} RunButton Кнопка запуска.
     * @@property {HTMLElement} ClearButton Кнопка сброса.
     */

    /**
     * Базовые элеметы.
     * @@typedef {Object} HtmlElements
     *
     * @@property {HTMLElement} RobotDisplay Контейнер экрана робота.
     * @@property {HTMLElement} TextInput Элемент ввода кода.
     * @@property {HTMLElement} LogDisplay Элемент с логом.
     * @@property {HtmlButtonsElements} Buttons Кнопки.
     */

    /**
     * Элементы документа.
     * @@type {HtmlElements}
     */
    var html_elements = {
        RobotDisplay: document.getElementById('robot_display'),
        TextInput: document.getElementById('code_input'),
        LogDisplay: document.getElementById('log_display'),
        Buttons: {
            RunButton: document.getElementById('run_button'),
            ClearButton: document.getElementById('clear_button'),
        }
    }
</script>

<script type="module">
    import * as RAPI from "@Url.Content("~/Scripts/RobotAPI/GeneralRobotAPI.js")";

    @if (IsSectionDefined("field_init"))
    {
        @RenderSection("field_init")
    }
    else
    {
        @:var RobotAPI = RAPI.CreateFullRobotAPI(10, 10, true, 5, 5, html_elements.LogDisplay, 100);
    }


    html_elements.RobotDisplay.innerHTML = '';
    html_elements.RobotDisplay.append(RobotAPI.Field.FieldElement);

    html_elements.Buttons.ClearButton.onclick = RobotAPI.Reset;
    html_elements.Buttons.RunButton.onclick = function() {
        var code = html_elements.TextInput.value;
        RobotAPI.Execute(code);
    };
</script>


@if (IsSectionDefined("user_code"))
{
    @RenderSection("user_code")
}
else
{
    <script>
        html_elements.TextInput.innerHTML = ''
    </script>
}

@section size_scripts {
    <script>
        (function () {

            var top_row = $('#page_top_row');
            var bottom_row = $('#page_bottom_row');

            (function () {
                var body = $('body');
                var navbar = $('.navbar');
                var footer = $('footer');
                var height = body.height() - navbar.height() - footer.height();

                var hp = height / 3;

                top_row.height(hp * 2);
                bottom_row.height(hp);
            })();
        })();
    </script>
}