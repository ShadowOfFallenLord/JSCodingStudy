//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан по шаблону.
//
//     Изменения, вносимые в этот файл вручную, могут привести к непредвиденной работе приложения.
//     Изменения, вносимые в этот файл вручную, будут перезаписаны при повторном создании кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JSCodingStudy.EFSqlDAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class JSCodingStudyDBEntities : DbContext
    {
        public JSCodingStudyDBEntities()
            : base("name=JSCodingStudyDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<RobotLessons> RobotLessons { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Users> Users { get; set; }
        public virtual DbSet<RobotUserCode> RobotUserCode { get; set; }
    
        public virtual int RobotLessons_Add(string title, string task, string pattern, Nullable<int> start_x, Nullable<int> start_y, Nullable<bool> help_api_move, Nullable<bool> help_api_check, Nullable<bool> help_api_draw)
        {
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var taskParameter = task != null ?
                new ObjectParameter("task", task) :
                new ObjectParameter("task", typeof(string));
    
            var patternParameter = pattern != null ?
                new ObjectParameter("pattern", pattern) :
                new ObjectParameter("pattern", typeof(string));
    
            var start_xParameter = start_x.HasValue ?
                new ObjectParameter("start_x", start_x) :
                new ObjectParameter("start_x", typeof(int));
    
            var start_yParameter = start_y.HasValue ?
                new ObjectParameter("start_y", start_y) :
                new ObjectParameter("start_y", typeof(int));
    
            var help_api_moveParameter = help_api_move.HasValue ?
                new ObjectParameter("help_api_move", help_api_move) :
                new ObjectParameter("help_api_move", typeof(bool));
    
            var help_api_checkParameter = help_api_check.HasValue ?
                new ObjectParameter("help_api_check", help_api_check) :
                new ObjectParameter("help_api_check", typeof(bool));
    
            var help_api_drawParameter = help_api_draw.HasValue ?
                new ObjectParameter("help_api_draw", help_api_draw) :
                new ObjectParameter("help_api_draw", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RobotLessons_Add", titleParameter, taskParameter, patternParameter, start_xParameter, start_yParameter, help_api_moveParameter, help_api_checkParameter, help_api_drawParameter);
        }
    
        public virtual ObjectResult<RobotLessons_GetAll_Result> RobotLessons_GetAll(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RobotLessons_GetAll_Result>("RobotLessons_GetAll", idParameter);
        }
    
        public virtual ObjectResult<RobotLessons_GetById_Result> RobotLessons_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RobotLessons_GetById_Result>("RobotLessons_GetById", idParameter);
        }
    
        public virtual int RobotLessons_Remove(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RobotLessons_Remove", idParameter);
        }
    
        public virtual int RobotLessons_Update(Nullable<int> id, string title, string task, string pattern, Nullable<int> start_x, Nullable<int> start_y, Nullable<bool> help_api_move, Nullable<bool> help_api_check, Nullable<bool> help_api_draw)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var titleParameter = title != null ?
                new ObjectParameter("title", title) :
                new ObjectParameter("title", typeof(string));
    
            var taskParameter = task != null ?
                new ObjectParameter("task", task) :
                new ObjectParameter("task", typeof(string));
    
            var patternParameter = pattern != null ?
                new ObjectParameter("pattern", pattern) :
                new ObjectParameter("pattern", typeof(string));
    
            var start_xParameter = start_x.HasValue ?
                new ObjectParameter("start_x", start_x) :
                new ObjectParameter("start_x", typeof(int));
    
            var start_yParameter = start_y.HasValue ?
                new ObjectParameter("start_y", start_y) :
                new ObjectParameter("start_y", typeof(int));
    
            var help_api_moveParameter = help_api_move.HasValue ?
                new ObjectParameter("help_api_move", help_api_move) :
                new ObjectParameter("help_api_move", typeof(bool));
    
            var help_api_checkParameter = help_api_check.HasValue ?
                new ObjectParameter("help_api_check", help_api_check) :
                new ObjectParameter("help_api_check", typeof(bool));
    
            var help_api_drawParameter = help_api_draw.HasValue ?
                new ObjectParameter("help_api_draw", help_api_draw) :
                new ObjectParameter("help_api_draw", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RobotLessons_Update", idParameter, titleParameter, taskParameter, patternParameter, start_xParameter, start_yParameter, help_api_moveParameter, help_api_checkParameter, help_api_drawParameter);
        }
    
        public virtual int RobotUserCode_Add(Nullable<int> user_id, Nullable<int> lesson_id, string code)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var lesson_idParameter = lesson_id.HasValue ?
                new ObjectParameter("lesson_id", lesson_id) :
                new ObjectParameter("lesson_id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RobotUserCode_Add", user_idParameter, lesson_idParameter, codeParameter);
        }
    
        public virtual ObjectResult<RobotUserCode_GetById_Result> RobotUserCode_GetById(Nullable<int> user_id, Nullable<int> lesson_id)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var lesson_idParameter = lesson_id.HasValue ?
                new ObjectParameter("lesson_id", lesson_id) :
                new ObjectParameter("lesson_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<RobotUserCode_GetById_Result>("RobotUserCode_GetById", user_idParameter, lesson_idParameter);
        }
    
        public virtual int RobotUserCode_Update(Nullable<int> user_id, Nullable<int> lesson_id, string code)
        {
            var user_idParameter = user_id.HasValue ?
                new ObjectParameter("user_id", user_id) :
                new ObjectParameter("user_id", typeof(int));
    
            var lesson_idParameter = lesson_id.HasValue ?
                new ObjectParameter("lesson_id", lesson_id) :
                new ObjectParameter("lesson_id", typeof(int));
    
            var codeParameter = code != null ?
                new ObjectParameter("code", code) :
                new ObjectParameter("code", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("RobotUserCode_Update", user_idParameter, lesson_idParameter, codeParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int Users_Add(string login, string password)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_Add", loginParameter, passwordParameter);
        }
    
        public virtual ObjectResult<Users_GetById_Result> Users_GetById(Nullable<int> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_GetById_Result>("Users_GetById", idParameter);
        }
    
        public virtual ObjectResult<Users_GetByLogin_Result> Users_GetByLogin(string login)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Users_GetByLogin_Result>("Users_GetByLogin", loginParameter);
        }
    
        public virtual int Users_UpdateLessons(Nullable<int> id, Nullable<int> robot_last_lesson)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var robot_last_lessonParameter = robot_last_lesson.HasValue ?
                new ObjectParameter("robot_last_lesson", robot_last_lesson) :
                new ObjectParameter("robot_last_lesson", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Users_UpdateLessons", idParameter, robot_last_lessonParameter);
        }
    }
}
